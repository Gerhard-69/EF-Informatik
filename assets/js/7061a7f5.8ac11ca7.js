"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[935],{3543:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/Datenstruktur","metadata":{"permalink":"/EF-Informatik/Datenstruktur","editUrl":"https://github.com/Gerhard-69/EF-Informatik/tree/main/blog/Datenstruktur.md","source":"@site/blog/Datenstruktur.md","title":"Datenstruktur","description":"Das Spielfeld besteht aus Zeilen und diese wiederrum auf Spalten und in diesen Spalten sind wiederum Zahlen. \\"Verbindet\\" man diese Zahlen werden die Spalten neu definiert.","date":"2023-03-24T14:34:48.000Z","formattedDate":"24. M\xe4rz 2023","tags":[],"readingTime":0.135,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"nextItem":{"title":"Numtrip Blog","permalink":"/EF-Informatik/Numtrip"}},"content":"![](images/Datenstruktur.PNG)\\n\\nDas Spielfeld besteht aus Zeilen und diese wiederrum auf Spalten und in diesen Spalten sind wiederum Zahlen. \\"Verbindet\\" man diese Zahlen werden die Spalten neu definiert."},{"id":"/Numtrip","metadata":{"permalink":"/EF-Informatik/Numtrip","editUrl":"https://github.com/Gerhard-69/EF-Informatik/tree/main/blog/Numtrip.md","source":"@site/blog/Numtrip.md","title":"Numtrip Blog","description":"Ziel des Spiels","date":"2023-03-24T14:34:48.000Z","formattedDate":"24. M\xe4rz 2023","tags":[],"readingTime":2.8,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Datenstruktur","permalink":"/EF-Informatik/Datenstruktur"},"nextItem":{"title":"Top-Down-Entwurf","permalink":"/EF-Informatik/Top-Down-Entwurf"}},"content":"## Ziel des Spiels\\nNumtrip ist ein Denkspiel das \xe4hnlichkeiten dem sehr popul\xe4ren Spiel 2048 hat. Das Feld besteht auf gleich viel Reihen und Zeilen. Die Felder sind gef\xfcllt zuf\xe4lligen geraden Zahlen. Man kann ein Feld ausw\xe4hlen, wenn ein anligendes Feld mit der selben Zahl gef\xfcllt werden diese und die mit diesem Feld anliegende Verbunden. Das ausgew\xe4hlte feld wird verdoppelt. Das ganze geht so bis man 1024 erreicht hat.\\n## Umsetzung des Spiels\\n**Vorraussetzungen**  \\nUm Numtrip spielen zu k\xf6nnen braucht man Python, ich habe Visual Studio Code verwendet. Den Code findet man auf meinem Github  \\nhttps://github.com/Gerhard-69/EF-Informatik/blob/main/docs/Numtrip/game.py\\n\\n**Top-Down-Entwurf**  \\nMein aktualisierter Tod-Down Entwurf sieht so aus:\\n![](images/Topdown2.png)\\n\\n\\n**Meine lost Definition**  \\n_lost()_ ist meine definition um zu \xfcberpr\xfcfen ob noch ein Spielzug m\xf6glich ist.\\n```py  \\n    global loss\\n```\\nals erstes bestimme ich das sich die definition den globalen Scope von der Variabel loss ver\xe4ndern soll. Dies mache ich, da ich das Beenden des Spieles in einer anderen Definition mache.\\n\\n```py\\n    \'for i in range(5):\'\\n        old = board[x][y]\\n        if x > 0:\\n            if board[x-1][y] != old:\\n                loss = loss + 1\\n        if y < 4:\\n            if board[x][y+1] != old:\\n                loss = loss + 1\\n        if x > 0:\\n            if board[x-1][y] == old:\\n                loss = 0\\n                return\\n        if y < 4:\\n            if board[x][y+1] == old:\\n                loss = 0\\n                return\\n        \'x = x-1\'\\n```\\nDie orangenen Zeilen sind daf\xfcr verantwortlich damit man die Zeilen von unten nach oben sprich von 5 bis 1 durchgeht. \\n\\nDie anderen Zeilen sind zum z\xe4hlen der nicht m\xf6glichen Spielz\xfcge oder der m\xf6glichen Spielz\xfcge. Wenn ich Spielzug m\xf6glich ist breche ich die Definition ab weil einer schon reicht um weiterspielen zu k\xf6nnen.  \\n\\ndie old variable merkt sich den Wert in der Zelle die ich gerade \xfcberpr\xfcfe.  \\n\\nEinen Trick den ich noch verwende ist, dass ich nur die Zellen \xfcber und rechts neben mir anschaue. Das mache ich da ich von links nach rechts also von Reihe 1 nach 5 das Feld \xfcberpr\xfcfe.\\n\\n```py\\n    x = 4\\n    y = y+1\\n    lost(x, y)\\n```\\nhier setze ich die Zeile wieder auf den \\"Normalwert\\" und gehe in die n\xe4chste Reihe. Zum Schluss noch eine Rekursion und schon ist die ganze Definition fertig\\n\\n## Gr\xf6sste Herrausforderung  \\nIch bin beim Programmieren sehr oft auf Probleme gestossen die ich mal mehr mal weniger elegant gel\xf6st habe. Ein Problem auf das ich immer wieder gestossen bin hat sich in meiner feldverschiebung definition abgespielt. Diese hat zwar immer funktioniert aber nie ganz, da ich nie smart genug war mehrere senarien zu testen und sie dann nur f\xfcr einen speziellen Fall funktioniert hat. Also musste ich immer wieder zu der Definition zur\xfcckkehren um mir erneut gedanken dazu zu machen. Ein Beispiel ist das Bedenken von mehreren \xfcbereinander liegenden Feldern. Dass sowas passieren kann ist mir w\xe4hrend dem Spielen aufgefallen also musste ich erstmal den \xdcbelt\xe4ter ausfindig machen. Als sich dann wie so oft die Feldverschiebung als Problemkind herrausstellte habe ich mich zus\xe4tzlich noch sehr dumm beim l\xf6sen des Problems angestellt. Nach viel Zeit hab ich eine gefunden die sich aber nicht wirklich als platzsparend herrausgestellt hat.\\n\\n## Tipps\\nMein Tipp an andere EF-Sch\xfcler. Macht euch Notizen zum Code. H\xe4tte ich dass von Anfang an gemacht w\xe4re mir einiges an Zeit erspart geblieben da wenn mir ein Fehler in einer Definition aufgefallen ist, musste ich mir erstmal wieder den ganzen Code anschauen und verstehen welche Gedanken ich mir damals dazu gemacht habe."},{"id":"/Top-Down-Entwurf","metadata":{"permalink":"/EF-Informatik/Top-Down-Entwurf","editUrl":"https://github.com/Gerhard-69/EF-Informatik/tree/main/blog/Top-Down-Entwurf.md","source":"@site/blog/Top-Down-Entwurf.md","title":"Top-Down-Entwurf","description":"Wir haben einmal das Spielfeld in dem schauen m\xfcssen, dass zwei oder drei stellige Zahlen zentriert sind und das wir nach einem Spielzug das Feld wieder auff\xfcllen. (Visuelles)","date":"2023-03-24T14:34:48.000Z","formattedDate":"24. M\xe4rz 2023","tags":[],"readingTime":0.305,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Numtrip Blog","permalink":"/EF-Informatik/Numtrip"},"nextItem":{"title":"Lernjournal","permalink":"/EF-Informatik/2022/12/02/Lernjournal Numtrip"}},"content":"![](images/TopDown%20Numtrip.png)\\n\\nWir haben einmal das Spielfeld in dem schauen m\xfcssen, dass zwei oder drei stellige Zahlen zentriert sind und das wir nach einem Spielzug das Feld wieder auff\xfcllen. (Visuelles)\\n\\nIm Spielzweig passiert alles was man w\xe4hrend dem spielen nicht sieht also ob der Spielzug g\xfcltig ist, ob das Spiel gestartet wurde und wieviele Punkte der Spieler hat mit einem dementsprechenden Spielende."},{"id":"/2022/12/02/Lernjournal Numtrip","metadata":{"permalink":"/EF-Informatik/2022/12/02/Lernjournal Numtrip","editUrl":"https://github.com/Gerhard-69/EF-Informatik/tree/main/blog/2022-12-02-Lernjournal Numtrip.md","source":"@site/blog/2022-12-02-Lernjournal Numtrip.md","title":"Lernjournal","description":"Sieht vielleicht nicht \xfcbersichtlich aus und ist auch nicht gerade die k\xfcrzeste Code daf\xfcr funktioniert er gut. Die while-Schleife sorgt daf\xfcr, dass man beliebig viele Spielz\xfcge machen kann. Dann mit dem Input frage ich nach dem Feld. Damit ich mit der Eingabe weiterarbeiten kann wandle ich sie in einen Integer um. Da die erste Stelle in der Matrix bei 0:0 ist ich aber sie mit 1-5 angeschrieben habe muss ich jetzt noch -1 von der Eingabe rechnen. Zum Schluss nur noch das ausgew\xe4hlt Feld in der Matrix leeren und das Ergebnis neue Spielfeld anzeigen.","date":"2022-12-02T00:00:00.000Z","formattedDate":"2. Dezember 2022","tags":[],"readingTime":0.785,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Top-Down-Entwurf","permalink":"/EF-Informatik/Top-Down-Entwurf"}},"content":"![](images/Numtrip%20spielereingabe.PNG)\\n\\nSieht vielleicht nicht \xfcbersichtlich aus und ist auch nicht gerade die k\xfcrzeste Code daf\xfcr funktioniert er gut. Die while-Schleife sorgt daf\xfcr, dass man beliebig viele Spielz\xfcge machen kann. Dann mit dem Input frage ich nach dem Feld. Damit ich mit der Eingabe weiterarbeiten kann wandle ich sie in einen Integer um. Da die erste Stelle in der Matrix bei 0:0 ist ich aber sie mit 1-5 angeschrieben habe muss ich jetzt noch -1 von der Eingabe rechnen. Zum Schluss nur noch das ausgew\xe4hlt Feld in der Matrix leeren und das Ergebnis neue Spielfeld anzeigen.\\n\\n02.12.22\\nIch habe einen Grossteil der Zeit damit verbracht die \xdcberprufung der Benutzereingabe zu programmieren, daf\xfcr funktioniert sie jetzt auch wie geplant. Den rest der Zeit habe ich versucht die n\xe4chste Aufgabe zu l\xf6sen die ich nicht wirklich verstanden habe. Valentin hat von einer anderen Seite eine andere und besser erkl\xe4rte L\xf6sung gefunden die bei mir aber noch nicht ganz richtig funktioniert."}]}')}}]);